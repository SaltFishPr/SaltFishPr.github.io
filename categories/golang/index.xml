<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>golang on 咸鱼硕的博客</title><link>https://saltfishpr.github.io/categories/golang/</link><description>Recent content in golang on 咸鱼硕的博客</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Fri, 03 Dec 2021 01:56:06 +0800</lastBuildDate><atom:link href="https://saltfishpr.github.io/categories/golang/index.xml" rel="self" type="application/rss+xml"/><item><title>Go Clean Code</title><link>https://saltfishpr.github.io/p/go-clean-code/</link><pubDate>Fri, 03 Dec 2021 01:56:06 +0800</pubDate><guid>https://saltfishpr.github.io/p/go-clean-code/</guid><description>Clean Code Code is clean if it can be understood easily – by everyone on the team. Clean code can be read and enhanced by a developer other than its original author. With understandability comes readability, changeability, extensibility and maintainability.
General rules Follow standard conventions. Keep it simple stupid. Simpler is always better. Reduce complexity as much as possible. Boy scout rule. Leave the campground cleaner than you found it.</description></item><item><title>Go 语言资源整合</title><link>https://saltfishpr.github.io/p/go-%E8%AF%AD%E8%A8%80%E8%B5%84%E6%BA%90%E6%95%B4%E5%90%88/</link><pubDate>Thu, 02 Dec 2021 00:46:39 +0800</pubDate><guid>https://saltfishpr.github.io/p/go-%E8%AF%AD%E8%A8%80%E8%B5%84%E6%BA%90%E6%95%B4%E5%90%88/</guid><description>Golang Resource uber-guide: uber go guide
clean-go-article: go clean code
常用包 viper: 配置读取
zap: 日志输出
lumberjack: 日志滚动记录器
validator: 数据校验
cast: 类型转换
golang-underscore: 工具库，函数式编程助手
carbon: 时间库的扩展
cron: 定时任务
ants: goroutine 池
wire: 依赖注入
cobra: 命令行程序
resty: HTTP/REST 客户端
testify: 测试库，断言、mock
jsoniter: 标准库 encoding/json 的升级，可直接替换，高性能
gjson: 快速从 json 中获取值
fasthttp: 标准库 net/http 的升级，更快
agollo: 连接 apollo 配置中心
msgp: MessagePack 序列化，比 json 更快，数据量更小
redsync: Redis 分布式锁
sqlx: 标准库 database/sql 的扩展
kafka-go: kafka 库</description></item></channel></rss>